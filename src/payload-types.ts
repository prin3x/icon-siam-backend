/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    homepage: Homepage;
    'page-banners': PageBanner;
    events: Event;
    shops: Shop;
    dinings: Dining;
    attractions: Attraction;
    'icon-craft': IconCraft;
    'icon-luxe': IconLuxe;
    'getting-here': GettingHere;
    directory: Directory;
    floors: Floor;
    users: User;
    media: Media;
    categories: Category;
    'gallery-collections': GalleryCollection;
    promotions: Promotion;
    footers: Footer;
    stickbar: Stickbar;
    'news-press': NewsPress;
    stories: Story;
    'api-sync-logs': ApiSyncLog;
    facilities: Facility;
    'about-iconsiam': AboutIconsiam;
    'board-of-directors': BoardOfDirector;
    'iconsiam-awards': IconsiamAward;
    'vision-mission': VisionMission;
    residences: Residence;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    'page-banners': PageBannersSelect<false> | PageBannersSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    shops: ShopsSelect<false> | ShopsSelect<true>;
    dinings: DiningsSelect<false> | DiningsSelect<true>;
    attractions: AttractionsSelect<false> | AttractionsSelect<true>;
    'icon-craft': IconCraftSelect<false> | IconCraftSelect<true>;
    'icon-luxe': IconLuxeSelect<false> | IconLuxeSelect<true>;
    'getting-here': GettingHereSelect<false> | GettingHereSelect<true>;
    directory: DirectorySelect<false> | DirectorySelect<true>;
    floors: FloorsSelect<false> | FloorsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    'gallery-collections': GalleryCollectionsSelect<false> | GalleryCollectionsSelect<true>;
    promotions: PromotionsSelect<false> | PromotionsSelect<true>;
    footers: FootersSelect<false> | FootersSelect<true>;
    stickbar: StickbarSelect<false> | StickbarSelect<true>;
    'news-press': NewsPressSelect<false> | NewsPressSelect<true>;
    stories: StoriesSelect<false> | StoriesSelect<true>;
    'api-sync-logs': ApiSyncLogsSelect<false> | ApiSyncLogsSelect<true>;
    facilities: FacilitiesSelect<false> | FacilitiesSelect<true>;
    'about-iconsiam': AboutIconsiamSelect<false> | AboutIconsiamSelect<true>;
    'board-of-directors': BoardOfDirectorsSelect<false> | BoardOfDirectorsSelect<true>;
    'iconsiam-awards': IconsiamAwardsSelect<false> | IconsiamAwardsSelect<true>;
    'vision-mission': VisionMissionSelect<false> | VisionMissionSelect<true>;
    residences: ResidencesSelect<false> | ResidencesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: 'th' | 'en' | 'zh';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: number;
  title?: string | null;
  subtitle?: string | null;
  description?: string | null;
  custom_happening_title?: string | null;
  custom_happening_subtitle?: string | null;
  custom_iconic_experience_title?: string | null;
  custom_iconic_experience_subtitle?: string | null;
  iconic_experience?:
    | {
        item?:
          | ({
              relationTo: 'dinings';
              value: number | Dining;
            } | null)
          | ({
              relationTo: 'shops';
              value: number | Shop;
            } | null)
          | ({
              relationTo: 'attractions';
              value: number | Attraction;
            } | null);
        custom_title?: string | null;
        custom_image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  custom_dinings_title?: string | null;
  custom_dinings_subtitle?: string | null;
  dinings?:
    | {
        dining?: (number | null) | Dining;
        custom_title?: string | null;
        custom_image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  extraordinary_shopping_title?: string | null;
  extraordinary_shopping_subtitle?: string | null;
  extraordinary_shopping?:
    | {
        title: string;
        subtitle: string;
        cover_image: number | Media;
        path_to_page: string;
        id?: string | null;
      }[]
    | null;
  showcase_title?: string | null;
  showcase_description?: string | null;
  showcase_call_to_action?: string | null;
  showcase_link?: string | null;
  showcase_background_image?: (number | null) | Media;
  onesiam_animation_text_runner?: string | null;
  onesiam_animation_text_runner_color?: string | null;
  onesiam_member_title?: string | null;
  onesiam_member_description?: string | null;
  onesiam_member_image?: (number | null) | Media;
  onesiam_member_call_to_action?: string | null;
  onesiam_member_link?: string | null;
  onesiam_app_title?: string | null;
  onesiam_app_description?: string | null;
  onesiam_app_image?: (number | null) | Media;
  onesiam_app_background_image?: (number | null) | Media;
  onesiam_app_background_image_mobile?: (number | null) | Media;
  onesiam_app_call_to_action_android_link?: string | null;
  onesiam_app_call_to_action_ios_link?: string | null;
  status?: ('draft' | 'published') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dinings".
 */
export interface Dining {
  id: number;
  title?: string | null;
  pin_to_iconluxe?: boolean | null;
  unique_id?: string | null;
  subtitle?: string | null;
  description?: string | null;
  /**
   * Select categories this dining belongs to
   */
  categories?: (number | Category)[] | null;
  floor?: (number | null) | Floor;
  location_zone?: string | null;
  location_shop_number?: string | null;
  location_coordinates?: {
    poi_x?: number | null;
    poi_y?: number | null;
  };
  opening_hours?: {
    same_hours_every_day?: boolean | null;
    open?: string | null;
    close?: string | null;
    per_day?:
      | {
          day: 'mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat' | 'sun';
          open: string;
          close: string;
          id?: string | null;
        }[]
      | null;
  };
  contact_info?: {
    website?: string | null;
    phone?: string | null;
    instagram_url?: string | null;
    facebook_url?: string | null;
    wechat_account?: string | null;
    line_account?: string | null;
    weibo_url?: string | null;
  };
  images?: {
    logo?: (number | null) | Media;
    main_image?: (number | null) | Media;
    thumbnail?: (number | null) | Media;
    facebook_image?: (number | null) | Media;
    gallery?:
      | {
          image?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  status: 'ACTIVE' | 'INACTIVE' | 'CLOSED' | 'TEMPORARILY_CLOSED' | 'COMING_SOON' | 'MASTER';
  date_range?: {
    start_date?: string | null;
    end_date?: string | null;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  keywords?:
    | {
        keyword?: string | null;
        id?: string | null;
      }[]
    | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  related_content?:
    | (
        | {
            relationTo: 'dinings';
            value: number | Dining;
          }
        | {
            relationTo: 'shops';
            value: number | Shop;
          }
        | {
            relationTo: 'promotions';
            value: number | Promotion;
          }
      )[]
    | null;
  related_promotions?: (number | Promotion)[] | null;
  /**
   * Short alphabet identifier for quick reference
   */
  short_alphabet?: string | null;
  is_featured?: boolean | null;
  /**
   * Custom sort order (lower numbers appear first)
   */
  sort_order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name?: string | null;
  pin_to_directory?: boolean | null;
  display_name?: string | null;
  description?: string | null;
  image?: (number | null) | Media;
  type: 'shops' | 'dinings' | 'promotions' | 'events' | 'directory' | 'news_press' | 'stories';
  order?: number | null;
  status: 'ACTIVE' | 'INACTIVE';
  slug: string;
  /**
   * ID from the original database, used for migration purposes.
   */
  original_id?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: {
    en?: string | null;
    th?: string | null;
    zh?: string | null;
  };
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Floor name
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "floors".
 */
export interface Floor {
  id: number;
  name: string;
  /**
   * Lower numbers appear first.
   */
  order: number;
  status: 'ACTIVE' | 'INACTIVE';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shops".
 */
export interface Shop {
  id: number;
  unique_id?: string | null;
  title?: string | null;
  pin_to_iconluxe?: boolean | null;
  subtitle?: string | null;
  description?: string | null;
  /**
   * Select categories this shop belongs to
   */
  categories?: (number | Category)[] | null;
  floor?: (number | null) | Floor;
  location_zone?: string | null;
  location_shop_number?: string | null;
  location_coordinates?: {
    poi_x?: number | null;
    poi_y?: number | null;
  };
  opening_hours?: {
    same_hours_every_day?: boolean | null;
    open?: string | null;
    close?: string | null;
    per_day?:
      | {
          day: 'mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat' | 'sun';
          open: string;
          close: string;
          id?: string | null;
        }[]
      | null;
  };
  contact_info?: {
    website?: string | null;
    phone?: string | null;
    instagram_url?: string | null;
    facebook_url?: string | null;
    wechat_account?: string | null;
    line_account?: string | null;
    weibo_url?: string | null;
  };
  images?: {
    logo?: (number | null) | Media;
    main_image?: (number | null) | Media;
    thumbnail?: (number | null) | Media;
    facebook_image?: (number | null) | Media;
    gallery?:
      | {
          image?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  status: 'ACTIVE' | 'INACTIVE' | 'CLOSED' | 'TEMPORARILY_CLOSED' | 'COMING_SOON' | 'MASTER';
  date_range?: {
    start_date?: string | null;
    end_date?: string | null;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  keywords?:
    | {
        keyword?: string | null;
        id?: string | null;
      }[]
    | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  related_content?:
    | (
        | {
            relationTo: 'dinings';
            value: number | Dining;
          }
        | {
            relationTo: 'shops';
            value: number | Shop;
          }
        | {
            relationTo: 'promotions';
            value: number | Promotion;
          }
      )[]
    | null;
  related_promotions?: (number | Promotion)[] | null;
  /**
   * Short alphabet identifier for quick reference
   */
  short_alphabet?: string | null;
  is_featured?: boolean | null;
  /**
   * Custom sort order (lower numbers appear first)
   */
  sort_order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "promotions".
 */
export interface Promotion {
  id: number;
  title?: string | null;
  subtitle?: string | null;
  description?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  highlight?: string | null;
  section_highlight?: string | null;
  short_alphabet?: string | null;
  start_date: string;
  end_date: string;
  show_time?: string | null;
  status: 'ACTIVE' | 'INACTIVE';
  pin_to_home?: boolean | null;
  pin_to_section?: boolean | null;
  sort_order?: number | null;
  images?: {
    cover_photo?: (number | null) | Media;
    thumbnail?: (number | null) | Media;
    facebook_image?: (number | null) | Media;
  };
  relationships?: {
    categories?: (number | Category)[] | null;
    related_content?:
      | (
          | {
              relationTo: 'dinings';
              value: number | Dining;
            }
          | {
              relationTo: 'shops';
              value: number | Shop;
            }
          | {
              relationTo: 'attractions';
              value: number | Attraction;
            }
          | {
              relationTo: 'events';
              value: number | Event;
            }
        )[]
      | null;
  };
  promotion_type?: string | null;
  keywords?:
    | {
        keyword?: string | null;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  system?: {
    original_id?: number | null;
    cid?: string | null;
    scid?: string | null;
    create_by?: string | null;
    modified_at?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attractions".
 */
export interface Attraction {
  id: number;
  main_image_url?: (number | null) | Media;
  title?: string | null;
  subtitle?: string | null;
  description?: string | null;
  highlight_image_url?:
    | {
        image_url?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  feature_image_url?: (number | null) | Media;
  feature_title?: string | null;
  feature_description?: string | null;
  showcase_image_url?: (number | null) | Media;
  showcase_background_color?: string | null;
  showcase_title?: string | null;
  showcase_subtitle?: string | null;
  showcase_description?: string | null;
  gallery_main_image_url?: (number | null) | Media;
  gallery_title?: string | null;
  gallery_image_urls?:
    | {
        image_url?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  gallery_description?: string | null;
  status: 'ACTIVE' | 'INACTIVE' | 'CLOSED' | 'TEMPORARILY_CLOSED';
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  keywords?:
    | {
        keyword?: string | null;
        id?: string | null;
      }[]
    | null;
  order: number;
  is_featured?: boolean | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  title?: string | null;
  subtitle?: string | null;
  description?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Short highlight text for the event
   */
  highlight?: string | null;
  /**
   * Highlight text for specific sections
   */
  section_highlight?: string | null;
  /**
   * Short alphabetical identifier
   */
  short_alphabet?: string | null;
  start_date: string;
  end_date: string;
  /**
   * Time when the event/show takes place
   */
  show_time?: string | null;
  status: 'ACTIVE' | 'INACTIVE';
  is_featured?: boolean | null;
  /**
   * Order for displaying events
   */
  sort_order?: number | null;
  images?: {
    cover_photo?: (number | null) | Media;
    thumbnail?: (number | null) | Media;
    facebook_image?: (number | null) | Media;
  };
  location?: {
    name?: string | null;
    address?: string | null;
    floor?: (number | null) | Floor;
    zone?: string | null;
  };
  relationships?: {
    /**
     * Select categories this event belongs to
     */
    categories?: (number | Category)[] | null;
    /**
     * Related dining, shops, or attractions
     */
    related_content?:
      | (
          | {
              relationTo: 'dinings';
              value: number | Dining;
            }
          | {
              relationTo: 'shops';
              value: number | Shop;
            }
          | {
              relationTo: 'attractions';
              value: number | Attraction;
            }
        )[]
      | null;
    /**
     * Related promotions
     */
    related_promotions?: (number | Promotion)[] | null;
  };
  promotion_type?: ('none' | 'special_offer' | 'discount' | 'event' | 'sale') | null;
  keywords?:
    | {
        keyword?: string | null;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  /**
   * Internal system fields
   */
  system?: {
    original_id?: number | null;
    cid?: number | null;
    scid?: number | null;
    create_by?: string | null;
    modified_at?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page-banners".
 */
export interface PageBanner {
  id: number;
  placement_key:
    | 'HOMEPAGE'
    | 'ABOUT'
    | 'DINING'
    | 'SHOPPING'
    | 'EVENTS'
    | 'PROMOTIONS'
    | 'GETTING_HERE'
    | 'DIRECTORY'
    | 'ICON_CRAFT'
    | 'ICON_LUXE'
    | 'ATTRACTION'
    | 'NEWS'
    | 'STORIES'
    | 'FACILITIES'
    | 'RESIDENCES'
    | 'TENANT_SERVICES'
    | 'VISION_AND_MISSION'
    | 'BOARD_OF_DIRECTORS'
    | 'AWARDS';
  display_order?: number | null;
  linked_event?: (number | null) | Event;
  custom_title?: string | null;
  custom_subtitle?: string | null;
  first_section_title?: string | null;
  first_section_subtitle?: string | null;
  custom_image_url?: (number | null) | Media;
  custom_banner_images?:
    | {
        banner_image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  custom_mobile_banner_images?:
    | {
        mobile_banner_image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  custom_image_alt_text?: string | null;
  call_to_action_text?: string | null;
  target_url?: string | null;
  custom_banner_section_title?: string | null;
  custom_banner_section_subtitle?: string | null;
  status?: ('ACTIVE' | 'INACTIVE') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "icon-craft".
 */
export interface IconCraft {
  id: number;
  main_image_url?: (number | null) | Media;
  title?: string | null;
  subtitle?: string | null;
  description?: string | null;
  content?:
    | {
        title?: string | null;
        description?: string | null;
        image_url?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  craft_highlight_title?: string | null;
  craft_highlight_description?: string | null;
  craft_highlight_content?:
    | {
        title?: string | null;
        image_url?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  gallery_image_urls?:
    | {
        image_url?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  status: 'ACTIVE' | 'INACTIVE';
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  slug: string;
  keywords?:
    | {
        keyword?: string | null;
        id?: string | null;
      }[]
    | null;
  is_featured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "icon-luxe".
 */
export interface IconLuxe {
  id: number;
  main_image_url?: (number | null) | Media;
  title?: string | null;
  subtitle?: string | null;
  description?: string | null;
  highlight_title?: string | null;
  highlight_description?: string | null;
  highlight_image_url?: (number | null) | Media;
  showcase_title?: string | null;
  showcase_description?: string | null;
  gallery_image_urls?:
    | {
        image_url?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  status: 'ACTIVE' | 'INACTIVE';
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  slug: string;
  keywords?:
    | {
        keyword?: string | null;
        id?: string | null;
      }[]
    | null;
  is_featured?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "getting-here".
 */
export interface GettingHere {
  id: number;
  title?: string | null;
  custom_image_url?: (number | null) | Media;
  location?: string | null;
  contact?: string | null;
  contact_info?: string | null;
  google_map_title?: string | null;
  google_map_url?: string | null;
  opening_hours?: {
    same_hours_every_day?: boolean | null;
    open?: string | null;
    close?: string | null;
    per_day?:
      | {
          day: 'mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat' | 'sun';
          open: string;
          close: string;
          id?: string | null;
        }[]
      | null;
  };
  methods?:
    | {
        type: 'car' | 'bts' | 'bus' | 'boat' | 'hotel_boat' | 'shuttle_boat';
        icon?: (number | null) | Media;
        title?: string | null;
        details?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  explore_icon_siam_title?: string | null;
  explore_icon_siam?:
    | {
        placement_key:
          | 'HOMEPAGE'
          | 'ABOUT'
          | 'DINING'
          | 'SHOPPING'
          | 'EVENTS'
          | 'PROMOTIONS'
          | 'GETTING_HERE'
          | 'DIRECTORY'
          | 'ICON_CRAFT'
          | 'ICON_LUXE'
          | 'ATTRACTION'
          | 'NEWS'
          | 'STORIES'
          | 'FACILITIES'
          | 'RESIDENCES'
          | 'TENANT_SERVICES'
          | 'VISION_AND_MISSION'
          | 'BOARD_OF_DIRECTORS'
          | 'AWARDS';
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "directory".
 */
export interface Directory {
  id: number;
  icon_siam_picks?:
    | {
        item: (
          | {
              relationTo: 'shops';
              value: number | Shop;
            }
          | {
              relationTo: 'dinings';
              value: number | Dining;
            }
          | {
              relationTo: 'attractions';
              value: number | Attraction;
            }
          | {
              relationTo: 'icon-luxe';
              value: number | IconLuxe;
            }
          | {
              relationTo: 'icon-craft';
              value: number | IconCraft;
            }
        )[];
        custom_title?: string | null;
        custom_image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  azureId?: string | null;
  roles?: ('admin' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery-collections".
 */
export interface GalleryCollection {
  id: number;
  placement_key:
    | 'HOMEPAGE'
    | 'ABOUT'
    | 'DINING'
    | 'SHOPPING'
    | 'EVENTS'
    | 'GETTING_HERE'
    | 'DIRECTORY'
    | 'ICON_CRAFT'
    | 'ICON_LUXE'
    | 'ATTRACTION'
    | 'NEWS'
    | 'STORIES'
    | 'FACILITIES'
    | 'RESIDENCES'
    | 'TENANT_SERVICES'
    | 'VISION_AND_MISSION'
    | 'BOARD_OF_DIRECTORS'
    | 'AWARDS';
  title?: string | null;
  description?: string | null;
  gallery_image_urls?:
    | {
        image_url?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footers".
 */
export interface Footer {
  id: number;
  name?: string | null;
  button_text?: string | null;
  button_link?: string | null;
  connect_with_us?:
    | {
        name?: string | null;
        image_icon?: (number | null) | Media;
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  awards?:
    | {
        image_url?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stickbar".
 */
export interface Stickbar {
  id: number;
  title?: string | null;
  icon?: (number | null) | Media;
  link?: string | null;
  status?: ('active' | 'inactive') | null;
  background_color?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news-press".
 */
export interface NewsPress {
  id: number;
  title: string;
  subtitle?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  seo?: {
    keywords?: string | null;
    description?: string | null;
  };
  highlight?: string | null;
  section_highlight?: string | null;
  short_alphabet?: string | null;
  start_date: string;
  end_date: string;
  show_time?: string | null;
  status: 'ACTIVE' | 'INACTIVE';
  pin_to_home?: boolean | null;
  pin_to_section?: boolean | null;
  sort_order?: number | null;
  images?: {
    cover_photo?: (number | null) | Media;
    thumbnail?: (number | null) | Media;
    facebook_image?: (number | null) | Media;
  };
  relationships?: {
    categories?: (number | Category)[] | null;
    related_content?:
      | (
          | {
              relationTo: 'dinings';
              value: number | Dining;
            }
          | {
              relationTo: 'shops';
              value: number | Shop;
            }
          | {
              relationTo: 'attractions';
              value: number | Attraction;
            }
          | {
              relationTo: 'events';
              value: number | Event;
            }
          | {
              relationTo: 'promotions';
              value: number | Promotion;
            }
        )[]
      | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stories".
 */
export interface Story {
  id: number;
  title?: string | null;
  subtitle?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  videos?: {
    /**
     * Enter the Embed URL of the Youtube video
     */
    youtube_url?: string | null;
  };
  seo?: {
    keywords?: string | null;
    description?: string | null;
  };
  highlight?: string | null;
  section_highlight?: string | null;
  short_alphabet?: string | null;
  start_date: string;
  end_date: string;
  show_time?: string | null;
  status: 'ACTIVE' | 'INACTIVE';
  pin_to_home?: boolean | null;
  pin_to_section?: boolean | null;
  sort_order?: number | null;
  images?: {
    cover_photo?: (number | null) | Media;
    thumbnail?: (number | null) | Media;
    facebook_image?: (number | null) | Media;
  };
  relationships?: {
    categories?: (number | Category)[] | null;
    related_content?:
      | (
          | {
              relationTo: 'dinings';
              value: number | Dining;
            }
          | {
              relationTo: 'shops';
              value: number | Shop;
            }
          | {
              relationTo: 'attractions';
              value: number | Attraction;
            }
          | {
              relationTo: 'events';
              value: number | Event;
            }
          | {
              relationTo: 'promotions';
              value: number | Promotion;
            }
        )[]
      | null;
  };
  system?: {
    original_id?: number | null;
    cid?: string | null;
    scid?: string | null;
    create_by?: string | null;
    modified_at?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Track external API sync operations
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "api-sync-logs".
 */
export interface ApiSyncLog {
  id: number;
  /**
   * Unique identifier for this sync operation
   */
  sync_id: string;
  status: 'RUNNING' | 'COMPLETED' | 'FAILED' | 'PARTIAL';
  started_at: string;
  completed_at?: string | null;
  /**
   * How long the sync took to complete
   */
  duration_seconds?: number | null;
  external_api_url: string;
  api_response_summary?: {
    total_records_fetched?: number | null;
    total_pages?: number | null;
    last_page_processed?: number | null;
  };
  processing_summary?: {
    records_processed?: number | null;
    records_created?: number | null;
    records_updated?: number | null;
    records_failed?: number | null;
    shops_processed?: number | null;
    dinings_processed?: number | null;
  };
  validation_issues?:
    | {
        record_unique_id?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  unmapped_data?: {
    unmapped_floors?:
      | {
          floor_name?: string | null;
          id?: string | null;
        }[]
      | null;
    unmapped_categories?:
      | {
          category_name?: string | null;
          type?: ('shops' | 'dinings') | null;
          english_name?: string | null;
          thai_name?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  errors?:
    | {
        timestamp?: string | null;
        record_unique_id?: string | null;
        error_message?: string | null;
        error_stack?: string | null;
        id?: string | null;
      }[]
    | null;
  performance_metrics?: {
    avg_time_per_record?: number | null;
    memory_usage_mb?: number | null;
    api_response_time_avg?: number | null;
  };
  /**
   * Additional notes about this sync operation
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "facilities".
 */
export interface Facility {
  id: number;
  title?: string | null;
  banner_image?: (number | null) | Media;
  bank_section?: {
    section_name?: string | null;
    /**
     * Select the shop to be displayed in the section
     */
    section_contents?: (number | Shop)[] | null;
  };
  post_office_section?: {
    section_name?: string | null;
    /**
     * Select the shop to be displayed in the section
     */
    section_contents?: (number | Shop)[] | null;
  };
  services?:
    | {
        image_icon?: (number | null) | Media;
        service_name?: string | null;
        description?: string | null;
        floor?: (number | Floor)[] | null;
        location_zone?: string | null;
        id?: string | null;
      }[]
    | null;
  facilities?:
    | {
        image_icon?: (number | null) | Media;
        facility_name?: string | null;
        description?: string | null;
        floor?: (number | Floor)[] | null;
        location_zone?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-iconsiam".
 */
export interface AboutIconsiam {
  id: number;
  banner_image?: (number | null) | Media;
  title: string;
  subtitle?: string | null;
  status: 'ACTIVE' | 'INACTIVE';
  about_iconsiam?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  development_partners?: {
    image?: (number | null) | Media;
    title?: string | null;
    description?: string | null;
    partners?:
      | {
          logo?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  board_of_directors?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  vision_mission?: {
    title?: string | null;
    image?: (number | null) | Media;
    description?: string | null;
    background_color?: string | null;
  };
  awards?: {
    title?: string | null;
    description?: string | null;
    awards_list?:
      | {
          image?: (number | null) | Media;
          title: string;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  seo?: {
    keywords?: string | null;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "board-of-directors".
 */
export interface BoardOfDirector {
  id: number;
  banner_image?: (number | null) | Media;
  title: string;
  subtitle?: string | null;
  description?: string | null;
  status: 'ACTIVE' | 'INACTIVE';
  directors?:
    | {
        profile_image: number | Media;
        full_name: string;
        title: string;
        /**
         * The order in which the board members will be displayed
         */
        order?: number | null;
        id?: string | null;
      }[]
    | null;
  seo?: {
    keywords?: string | null;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "iconsiam-awards".
 */
export interface IconsiamAward {
  id: number;
  banner_image?: (number | null) | Media;
  title: string;
  subtitle?: string | null;
  description?: string | null;
  status: 'ACTIVE' | 'INACTIVE';
  featured_awards?:
    | {
        award_image: number | Media;
        award_title: string;
        award_description?: string | null;
        year?: string | null;
        category?: string | null;
        order?: number | null;
        id?: string | null;
      }[]
    | null;
  awards_by_year?:
    | {
        year: string;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  call_to_action?: {
    text?: string | null;
    link?: string | null;
  };
  seo?: {
    keywords?: string | null;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vision-mission".
 */
export interface VisionMission {
  id: number;
  banner_image?: (number | null) | Media;
  title: string;
  subtitle?: string | null;
  status: 'ACTIVE' | 'INACTIVE';
  /**
   * The main introduction text that appears below the banner
   */
  intro_text?: string | null;
  content_sections?:
    | {
        title?: string | null;
        description?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  seo?: {
    keywords?: string | null;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "residences".
 */
export interface Residence {
  id: number;
  title: string;
  status: 'ACTIVE' | 'INACTIVE';
  residence_sections?:
    | {
        logo?: (number | null) | Media;
        title: string;
        description?: string | null;
        image?: (number | null) | Media;
        sort_order?: number | null;
        call_to_action?: {
          text?: string | null;
          link?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  gallery?: {
    title?: string | null;
    description?: string | null;
    images?:
      | {
          image: number | Media;
          alt_text?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  seo?: {
    keywords?: string | null;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'homepage';
        value: number | Homepage;
      } | null)
    | ({
        relationTo: 'page-banners';
        value: number | PageBanner;
      } | null)
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'shops';
        value: number | Shop;
      } | null)
    | ({
        relationTo: 'dinings';
        value: number | Dining;
      } | null)
    | ({
        relationTo: 'attractions';
        value: number | Attraction;
      } | null)
    | ({
        relationTo: 'icon-craft';
        value: number | IconCraft;
      } | null)
    | ({
        relationTo: 'icon-luxe';
        value: number | IconLuxe;
      } | null)
    | ({
        relationTo: 'getting-here';
        value: number | GettingHere;
      } | null)
    | ({
        relationTo: 'directory';
        value: number | Directory;
      } | null)
    | ({
        relationTo: 'floors';
        value: number | Floor;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'gallery-collections';
        value: number | GalleryCollection;
      } | null)
    | ({
        relationTo: 'promotions';
        value: number | Promotion;
      } | null)
    | ({
        relationTo: 'footers';
        value: number | Footer;
      } | null)
    | ({
        relationTo: 'stickbar';
        value: number | Stickbar;
      } | null)
    | ({
        relationTo: 'news-press';
        value: number | NewsPress;
      } | null)
    | ({
        relationTo: 'stories';
        value: number | Story;
      } | null)
    | ({
        relationTo: 'api-sync-logs';
        value: number | ApiSyncLog;
      } | null)
    | ({
        relationTo: 'facilities';
        value: number | Facility;
      } | null)
    | ({
        relationTo: 'about-iconsiam';
        value: number | AboutIconsiam;
      } | null)
    | ({
        relationTo: 'board-of-directors';
        value: number | BoardOfDirector;
      } | null)
    | ({
        relationTo: 'iconsiam-awards';
        value: number | IconsiamAward;
      } | null)
    | ({
        relationTo: 'vision-mission';
        value: number | VisionMission;
      } | null)
    | ({
        relationTo: 'residences';
        value: number | Residence;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  description?: T;
  custom_happening_title?: T;
  custom_happening_subtitle?: T;
  custom_iconic_experience_title?: T;
  custom_iconic_experience_subtitle?: T;
  iconic_experience?:
    | T
    | {
        item?: T;
        custom_title?: T;
        custom_image?: T;
        id?: T;
      };
  custom_dinings_title?: T;
  custom_dinings_subtitle?: T;
  dinings?:
    | T
    | {
        dining?: T;
        custom_title?: T;
        custom_image?: T;
        id?: T;
      };
  extraordinary_shopping_title?: T;
  extraordinary_shopping_subtitle?: T;
  extraordinary_shopping?:
    | T
    | {
        title?: T;
        subtitle?: T;
        cover_image?: T;
        path_to_page?: T;
        id?: T;
      };
  showcase_title?: T;
  showcase_description?: T;
  showcase_call_to_action?: T;
  showcase_link?: T;
  showcase_background_image?: T;
  onesiam_animation_text_runner?: T;
  onesiam_animation_text_runner_color?: T;
  onesiam_member_title?: T;
  onesiam_member_description?: T;
  onesiam_member_image?: T;
  onesiam_member_call_to_action?: T;
  onesiam_member_link?: T;
  onesiam_app_title?: T;
  onesiam_app_description?: T;
  onesiam_app_image?: T;
  onesiam_app_background_image?: T;
  onesiam_app_background_image_mobile?: T;
  onesiam_app_call_to_action_android_link?: T;
  onesiam_app_call_to_action_ios_link?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page-banners_select".
 */
export interface PageBannersSelect<T extends boolean = true> {
  placement_key?: T;
  display_order?: T;
  linked_event?: T;
  custom_title?: T;
  custom_subtitle?: T;
  first_section_title?: T;
  first_section_subtitle?: T;
  custom_image_url?: T;
  custom_banner_images?:
    | T
    | {
        banner_image?: T;
        id?: T;
      };
  custom_mobile_banner_images?:
    | T
    | {
        mobile_banner_image?: T;
        id?: T;
      };
  custom_image_alt_text?: T;
  call_to_action_text?: T;
  target_url?: T;
  custom_banner_section_title?: T;
  custom_banner_section_subtitle?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  description?: T;
  content?: T;
  highlight?: T;
  section_highlight?: T;
  short_alphabet?: T;
  start_date?: T;
  end_date?: T;
  show_time?: T;
  status?: T;
  is_featured?: T;
  sort_order?: T;
  images?:
    | T
    | {
        cover_photo?: T;
        thumbnail?: T;
        facebook_image?: T;
      };
  location?:
    | T
    | {
        name?: T;
        address?: T;
        floor?: T;
        zone?: T;
      };
  relationships?:
    | T
    | {
        categories?: T;
        related_content?: T;
        related_promotions?: T;
      };
  promotion_type?: T;
  keywords?:
    | T
    | {
        keyword?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  system?:
    | T
    | {
        original_id?: T;
        cid?: T;
        scid?: T;
        create_by?: T;
        modified_at?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shops_select".
 */
export interface ShopsSelect<T extends boolean = true> {
  unique_id?: T;
  title?: T;
  pin_to_iconluxe?: T;
  subtitle?: T;
  description?: T;
  categories?: T;
  floor?: T;
  location_zone?: T;
  location_shop_number?: T;
  location_coordinates?:
    | T
    | {
        poi_x?: T;
        poi_y?: T;
      };
  opening_hours?:
    | T
    | {
        same_hours_every_day?: T;
        open?: T;
        close?: T;
        per_day?:
          | T
          | {
              day?: T;
              open?: T;
              close?: T;
              id?: T;
            };
      };
  contact_info?:
    | T
    | {
        website?: T;
        phone?: T;
        instagram_url?: T;
        facebook_url?: T;
        wechat_account?: T;
        line_account?: T;
        weibo_url?: T;
      };
  images?:
    | T
    | {
        logo?: T;
        main_image?: T;
        thumbnail?: T;
        facebook_image?: T;
        gallery?:
          | T
          | {
              image?: T;
              id?: T;
            };
      };
  status?: T;
  date_range?:
    | T
    | {
        start_date?: T;
        end_date?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  keywords?:
    | T
    | {
        keyword?: T;
        id?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  related_content?: T;
  related_promotions?: T;
  short_alphabet?: T;
  is_featured?: T;
  sort_order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dinings_select".
 */
export interface DiningsSelect<T extends boolean = true> {
  title?: T;
  pin_to_iconluxe?: T;
  unique_id?: T;
  subtitle?: T;
  description?: T;
  categories?: T;
  floor?: T;
  location_zone?: T;
  location_shop_number?: T;
  location_coordinates?:
    | T
    | {
        poi_x?: T;
        poi_y?: T;
      };
  opening_hours?:
    | T
    | {
        same_hours_every_day?: T;
        open?: T;
        close?: T;
        per_day?:
          | T
          | {
              day?: T;
              open?: T;
              close?: T;
              id?: T;
            };
      };
  contact_info?:
    | T
    | {
        website?: T;
        phone?: T;
        instagram_url?: T;
        facebook_url?: T;
        wechat_account?: T;
        line_account?: T;
        weibo_url?: T;
      };
  images?:
    | T
    | {
        logo?: T;
        main_image?: T;
        thumbnail?: T;
        facebook_image?: T;
        gallery?:
          | T
          | {
              image?: T;
              id?: T;
            };
      };
  status?: T;
  date_range?:
    | T
    | {
        start_date?: T;
        end_date?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  keywords?:
    | T
    | {
        keyword?: T;
        id?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  related_content?: T;
  related_promotions?: T;
  short_alphabet?: T;
  is_featured?: T;
  sort_order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attractions_select".
 */
export interface AttractionsSelect<T extends boolean = true> {
  main_image_url?: T;
  title?: T;
  subtitle?: T;
  description?: T;
  highlight_image_url?:
    | T
    | {
        image_url?: T;
        id?: T;
      };
  feature_image_url?: T;
  feature_title?: T;
  feature_description?: T;
  showcase_image_url?: T;
  showcase_background_color?: T;
  showcase_title?: T;
  showcase_subtitle?: T;
  showcase_description?: T;
  gallery_main_image_url?: T;
  gallery_title?: T;
  gallery_image_urls?:
    | T
    | {
        image_url?: T;
        id?: T;
      };
  gallery_description?: T;
  status?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  keywords?:
    | T
    | {
        keyword?: T;
        id?: T;
      };
  order?: T;
  is_featured?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "icon-craft_select".
 */
export interface IconCraftSelect<T extends boolean = true> {
  main_image_url?: T;
  title?: T;
  subtitle?: T;
  description?: T;
  content?:
    | T
    | {
        title?: T;
        description?: T;
        image_url?: T;
        id?: T;
      };
  craft_highlight_title?: T;
  craft_highlight_description?: T;
  craft_highlight_content?:
    | T
    | {
        title?: T;
        image_url?: T;
        id?: T;
      };
  gallery_image_urls?:
    | T
    | {
        image_url?: T;
        id?: T;
      };
  status?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  slug?: T;
  keywords?:
    | T
    | {
        keyword?: T;
        id?: T;
      };
  is_featured?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "icon-luxe_select".
 */
export interface IconLuxeSelect<T extends boolean = true> {
  main_image_url?: T;
  title?: T;
  subtitle?: T;
  description?: T;
  highlight_title?: T;
  highlight_description?: T;
  highlight_image_url?: T;
  showcase_title?: T;
  showcase_description?: T;
  gallery_image_urls?:
    | T
    | {
        image_url?: T;
        id?: T;
      };
  status?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  slug?: T;
  keywords?:
    | T
    | {
        keyword?: T;
        id?: T;
      };
  is_featured?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "getting-here_select".
 */
export interface GettingHereSelect<T extends boolean = true> {
  title?: T;
  custom_image_url?: T;
  location?: T;
  contact?: T;
  contact_info?: T;
  google_map_title?: T;
  google_map_url?: T;
  opening_hours?:
    | T
    | {
        same_hours_every_day?: T;
        open?: T;
        close?: T;
        per_day?:
          | T
          | {
              day?: T;
              open?: T;
              close?: T;
              id?: T;
            };
      };
  methods?:
    | T
    | {
        type?: T;
        icon?: T;
        title?: T;
        details?: T;
        id?: T;
      };
  explore_icon_siam_title?: T;
  explore_icon_siam?:
    | T
    | {
        placement_key?: T;
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "directory_select".
 */
export interface DirectorySelect<T extends boolean = true> {
  icon_siam_picks?:
    | T
    | {
        item?: T;
        custom_title?: T;
        custom_image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "floors_select".
 */
export interface FloorsSelect<T extends boolean = true> {
  name?: T;
  order?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  azureId?: T;
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?:
    | T
    | {
        en?: T;
        th?: T;
        zh?: T;
      };
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  pin_to_directory?: T;
  display_name?: T;
  description?: T;
  image?: T;
  type?: T;
  order?: T;
  status?: T;
  slug?: T;
  original_id?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery-collections_select".
 */
export interface GalleryCollectionsSelect<T extends boolean = true> {
  placement_key?: T;
  title?: T;
  description?: T;
  gallery_image_urls?:
    | T
    | {
        image_url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "promotions_select".
 */
export interface PromotionsSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  description?: T;
  content?: T;
  highlight?: T;
  section_highlight?: T;
  short_alphabet?: T;
  start_date?: T;
  end_date?: T;
  show_time?: T;
  status?: T;
  pin_to_home?: T;
  pin_to_section?: T;
  sort_order?: T;
  images?:
    | T
    | {
        cover_photo?: T;
        thumbnail?: T;
        facebook_image?: T;
      };
  relationships?:
    | T
    | {
        categories?: T;
        related_content?: T;
      };
  promotion_type?: T;
  keywords?:
    | T
    | {
        keyword?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  system?:
    | T
    | {
        original_id?: T;
        cid?: T;
        scid?: T;
        create_by?: T;
        modified_at?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footers_select".
 */
export interface FootersSelect<T extends boolean = true> {
  name?: T;
  button_text?: T;
  button_link?: T;
  connect_with_us?:
    | T
    | {
        name?: T;
        image_icon?: T;
        link?: T;
        id?: T;
      };
  awards?:
    | T
    | {
        image_url?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stickbar_select".
 */
export interface StickbarSelect<T extends boolean = true> {
  title?: T;
  icon?: T;
  link?: T;
  status?: T;
  background_color?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news-press_select".
 */
export interface NewsPressSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  content?: T;
  seo?:
    | T
    | {
        keywords?: T;
        description?: T;
      };
  highlight?: T;
  section_highlight?: T;
  short_alphabet?: T;
  start_date?: T;
  end_date?: T;
  show_time?: T;
  status?: T;
  pin_to_home?: T;
  pin_to_section?: T;
  sort_order?: T;
  images?:
    | T
    | {
        cover_photo?: T;
        thumbnail?: T;
        facebook_image?: T;
      };
  relationships?:
    | T
    | {
        categories?: T;
        related_content?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "stories_select".
 */
export interface StoriesSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  content?: T;
  videos?:
    | T
    | {
        youtube_url?: T;
      };
  seo?:
    | T
    | {
        keywords?: T;
        description?: T;
      };
  highlight?: T;
  section_highlight?: T;
  short_alphabet?: T;
  start_date?: T;
  end_date?: T;
  show_time?: T;
  status?: T;
  pin_to_home?: T;
  pin_to_section?: T;
  sort_order?: T;
  images?:
    | T
    | {
        cover_photo?: T;
        thumbnail?: T;
        facebook_image?: T;
      };
  relationships?:
    | T
    | {
        categories?: T;
        related_content?: T;
      };
  system?:
    | T
    | {
        original_id?: T;
        cid?: T;
        scid?: T;
        create_by?: T;
        modified_at?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "api-sync-logs_select".
 */
export interface ApiSyncLogsSelect<T extends boolean = true> {
  sync_id?: T;
  status?: T;
  started_at?: T;
  completed_at?: T;
  duration_seconds?: T;
  external_api_url?: T;
  api_response_summary?:
    | T
    | {
        total_records_fetched?: T;
        total_pages?: T;
        last_page_processed?: T;
      };
  processing_summary?:
    | T
    | {
        records_processed?: T;
        records_created?: T;
        records_updated?: T;
        records_failed?: T;
        shops_processed?: T;
        dinings_processed?: T;
      };
  validation_issues?:
    | T
    | {
        record_unique_id?: T;
        description?: T;
        id?: T;
      };
  unmapped_data?:
    | T
    | {
        unmapped_floors?:
          | T
          | {
              floor_name?: T;
              id?: T;
            };
        unmapped_categories?:
          | T
          | {
              category_name?: T;
              type?: T;
              english_name?: T;
              thai_name?: T;
              id?: T;
            };
      };
  errors?:
    | T
    | {
        timestamp?: T;
        record_unique_id?: T;
        error_message?: T;
        error_stack?: T;
        id?: T;
      };
  performance_metrics?:
    | T
    | {
        avg_time_per_record?: T;
        memory_usage_mb?: T;
        api_response_time_avg?: T;
      };
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "facilities_select".
 */
export interface FacilitiesSelect<T extends boolean = true> {
  title?: T;
  banner_image?: T;
  bank_section?:
    | T
    | {
        section_name?: T;
        section_contents?: T;
      };
  post_office_section?:
    | T
    | {
        section_name?: T;
        section_contents?: T;
      };
  services?:
    | T
    | {
        image_icon?: T;
        service_name?: T;
        description?: T;
        floor?: T;
        location_zone?: T;
        id?: T;
      };
  facilities?:
    | T
    | {
        image_icon?: T;
        facility_name?: T;
        description?: T;
        floor?: T;
        location_zone?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-iconsiam_select".
 */
export interface AboutIconsiamSelect<T extends boolean = true> {
  banner_image?: T;
  title?: T;
  subtitle?: T;
  status?: T;
  about_iconsiam?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  development_partners?:
    | T
    | {
        image?: T;
        title?: T;
        description?: T;
        partners?:
          | T
          | {
              logo?: T;
              id?: T;
            };
      };
  board_of_directors?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  vision_mission?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
        background_color?: T;
      };
  awards?:
    | T
    | {
        title?: T;
        description?: T;
        awards_list?:
          | T
          | {
              image?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
  seo?:
    | T
    | {
        keywords?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "board-of-directors_select".
 */
export interface BoardOfDirectorsSelect<T extends boolean = true> {
  banner_image?: T;
  title?: T;
  subtitle?: T;
  description?: T;
  status?: T;
  directors?:
    | T
    | {
        profile_image?: T;
        full_name?: T;
        title?: T;
        order?: T;
        id?: T;
      };
  seo?:
    | T
    | {
        keywords?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "iconsiam-awards_select".
 */
export interface IconsiamAwardsSelect<T extends boolean = true> {
  banner_image?: T;
  title?: T;
  subtitle?: T;
  description?: T;
  status?: T;
  featured_awards?:
    | T
    | {
        award_image?: T;
        award_title?: T;
        award_description?: T;
        year?: T;
        category?: T;
        order?: T;
        id?: T;
      };
  awards_by_year?:
    | T
    | {
        year?: T;
        content?: T;
        id?: T;
      };
  call_to_action?:
    | T
    | {
        text?: T;
        link?: T;
      };
  seo?:
    | T
    | {
        keywords?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vision-mission_select".
 */
export interface VisionMissionSelect<T extends boolean = true> {
  banner_image?: T;
  title?: T;
  subtitle?: T;
  status?: T;
  intro_text?: T;
  content_sections?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        id?: T;
      };
  seo?:
    | T
    | {
        keywords?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "residences_select".
 */
export interface ResidencesSelect<T extends boolean = true> {
  title?: T;
  status?: T;
  residence_sections?:
    | T
    | {
        logo?: T;
        title?: T;
        description?: T;
        image?: T;
        sort_order?: T;
        call_to_action?:
          | T
          | {
              text?: T;
              link?: T;
            };
        id?: T;
      };
  gallery?:
    | T
    | {
        title?: T;
        description?: T;
        images?:
          | T
          | {
              image?: T;
              alt_text?: T;
              id?: T;
            };
      };
  seo?:
    | T
    | {
        keywords?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}